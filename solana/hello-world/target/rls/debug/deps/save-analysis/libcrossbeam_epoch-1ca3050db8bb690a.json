{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7","program":"/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=1ca3050db8bb690a","-C","extra-filename=-1ca3050db8bb690a","--out-dir","/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps","-L","dependency=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps","--extern","cfg_if=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/libcfg_if-2c7724008976718a.rmeta","--extern","crossbeam_utils=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/libcrossbeam_utils-3e0439da42805081.rmeta","--extern","lazy_static=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/liblazy_static-c481e70b9e077e91.rmeta","--extern","memoffset=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/libmemoffset-202a2d3691b336d1.rmeta","--extern","scopeguard=/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/libscopeguard-4c6c8732aae66efd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/d/personal/repos/learn-by-code/solana/hello-world/target/rls/debug/deps/libcrossbeam_epoch-1ca3050db8bb690a.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[8831425420703128718,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[5557959000602466733,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","num":22,"id":{"name":"spin","disambiguator":[16689960791893565133,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[14756367672396970820,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","num":24,"id":{"name":"scopeguard","disambiguator":[3320008020467133727,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","num":25,"id":{"name":"memoffset","disambiguator":[9231318132155413823,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":357},{"krate":0,"index":400},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":508},{"krate":0,"index":653},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":874},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588734,"byte_end":13588752,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588563,"byte_end":13588622,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588666,"byte_end":13588724,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588870,"byte_end":13588890,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588798,"byte_end":13588858,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589020,"byte_end":13589027,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13588939,"byte_end":13589011,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589113,"byte_end":13589116,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589049,"byte_end":13589104,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590227,"byte_end":13590248,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589431,"byte_end":13589483,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589484,"byte_end":13589487,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589488,"byte_end":13589579,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589580,"byte_end":13589672,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589673,"byte_end":13589676,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589677,"byte_end":13589742,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589743,"byte_end":13589746,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589747,"byte_end":13589841,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589842,"byte_end":13589868,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589869,"byte_end":13589961,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589962,"byte_end":13589990,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590034,"byte_end":13590216,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590314,"byte_end":13590321,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590255,"byte_end":13590306,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590539,"byte_end":13590546,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590347,"byte_end":13590395,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590400,"byte_end":13590403,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590408,"byte_end":13590501,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590506,"byte_end":13590531,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592896,"byte_end":13592905,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591923,"byte_end":13591970,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591971,"byte_end":13591974,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13591975,"byte_end":13592073,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592074,"byte_end":13592169,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592170,"byte_end":13592232,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592233,"byte_end":13592236,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592237,"byte_end":13592329,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592330,"byte_end":13592429,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592430,"byte_end":13592530,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592531,"byte_end":13592553,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592554,"byte_end":13592557,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592558,"byte_end":13592651,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592652,"byte_end":13592723,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592724,"byte_end":13592727,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592728,"byte_end":13592735,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592736,"byte_end":13592766,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592767,"byte_end":13592798,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592799,"byte_end":13592802,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592803,"byte_end":13592877,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592878,"byte_end":13592885,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":131},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592952,"byte_end":13592957,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592912,"byte_end":13592941,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593011,"byte_end":13593015,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13592971,"byte_end":13593001,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593167,"byte_end":13593171,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593022,"byte_end":13593067,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593072,"byte_end":13593075,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593080,"byte_end":13593092,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593097,"byte_end":13593100,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593105,"byte_end":13593152,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593535,"byte_end":13593540,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593205,"byte_end":13593240,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593245,"byte_end":13593248,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593253,"byte_end":13593265,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593270,"byte_end":13593273,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593278,"byte_end":13593354,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593359,"byte_end":13593427,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593432,"byte_end":13593520,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593939,"byte_end":13593948,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593575,"byte_end":13593618,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593623,"byte_end":13593626,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593631,"byte_end":13593643,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593648,"byte_end":13593651,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593656,"byte_end":13593732,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593737,"byte_end":13593805,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593810,"byte_end":13593900,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593905,"byte_end":13593924,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594361,"byte_end":13594365,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13593987,"byte_end":13594040,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594045,"byte_end":13594048,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594053,"byte_end":13594065,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594070,"byte_end":13594073,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594078,"byte_end":13594154,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594159,"byte_end":13594227,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594232,"byte_end":13594322,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594327,"byte_end":13594346,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597474,"byte_end":13597480,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13596956,"byte_end":13597020,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597021,"byte_end":13597024,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597025,"byte_end":13597123,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597124,"byte_end":13597221,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597222,"byte_end":13597293,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597294,"byte_end":13597297,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597298,"byte_end":13597378,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597379,"byte_end":13597382,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597383,"byte_end":13597462,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597966,"byte_end":13597969,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597733,"byte_end":13597815,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597820,"byte_end":13597823,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597828,"byte_end":13597842,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597847,"byte_end":13597850,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597855,"byte_end":13597862,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597867,"byte_end":13597899,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597904,"byte_end":13597907,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597912,"byte_end":13597942,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597947,"byte_end":13597954,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598313,"byte_end":13598317,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598072,"byte_end":13598154,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598159,"byte_end":13598162,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598167,"byte_end":13598181,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598186,"byte_end":13598189,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598194,"byte_end":13598201,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598206,"byte_end":13598238,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598243,"byte_end":13598246,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598251,"byte_end":13598289,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598294,"byte_end":13598301,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598906,"byte_end":13598910,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598622,"byte_end":13598660,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598665,"byte_end":13598668,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598673,"byte_end":13598687,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598692,"byte_end":13598695,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598700,"byte_end":13598707,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598712,"byte_end":13598744,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598749,"byte_end":13598752,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598757,"byte_end":13598791,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598796,"byte_end":13598803,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598808,"byte_end":13598811,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599495,"byte_end":13599499,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599037,"byte_end":13599082,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599087,"byte_end":13599090,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599095,"byte_end":13599185,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599190,"byte_end":13599204,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599209,"byte_end":13599212,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599217,"byte_end":13599231,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599236,"byte_end":13599239,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599244,"byte_end":13599251,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599256,"byte_end":13599305,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599310,"byte_end":13599354,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599359,"byte_end":13599362,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599367,"byte_end":13599397,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599402,"byte_end":13599432,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599437,"byte_end":13599471,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599476,"byte_end":13599483,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600506,"byte_end":13600518,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599629,"byte_end":13599708,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599713,"byte_end":13599716,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599721,"byte_end":13599794,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599799,"byte_end":13599875,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599880,"byte_end":13599951,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13599956,"byte_end":13600030,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600035,"byte_end":13600058,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600063,"byte_end":13600066,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600071,"byte_end":13600146,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600151,"byte_end":13600225,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600230,"byte_end":13600264,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600269,"byte_end":13600272,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600277,"byte_end":13600291,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600296,"byte_end":13600299,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600304,"byte_end":13600311,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600316,"byte_end":13600365,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600370,"byte_end":13600373,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600378,"byte_end":13600408,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600413,"byte_end":13600443,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600448,"byte_end":13600482,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600487,"byte_end":13600494,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601126,"byte_end":13601131,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600638,"byte_end":13600703,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600708,"byte_end":13600711,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600716,"byte_end":13600806,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600811,"byte_end":13600825,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600830,"byte_end":13600833,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600838,"byte_end":13600852,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600857,"byte_end":13600860,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600865,"byte_end":13600872,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600877,"byte_end":13600926,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600931,"byte_end":13600975,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600980,"byte_end":13600983,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13600988,"byte_end":13601018,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601023,"byte_end":13601059,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601064,"byte_end":13601102,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601107,"byte_end":13601114,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601781,"byte_end":13601785,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601238,"byte_end":13601326,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601331,"byte_end":13601344,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601349,"byte_end":13601352,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601357,"byte_end":13601447,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601452,"byte_end":13601466,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601471,"byte_end":13601474,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601479,"byte_end":13601493,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601498,"byte_end":13601501,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601506,"byte_end":13601513,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601518,"byte_end":13601575,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601580,"byte_end":13601624,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601629,"byte_end":13601632,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601637,"byte_end":13601667,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601672,"byte_end":13601702,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601707,"byte_end":13601757,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601762,"byte_end":13601769,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603621,"byte_end":13603637,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13601956,"byte_end":13602052,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602057,"byte_end":13602151,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602156,"byte_end":13602227,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602232,"byte_end":13602235,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602240,"byte_end":13602335,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602340,"byte_end":13602431,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602436,"byte_end":13602449,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602454,"byte_end":13602457,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602462,"byte_end":13602531,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602536,"byte_end":13602617,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602622,"byte_end":13602713,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602718,"byte_end":13602808,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602813,"byte_end":13602895,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602900,"byte_end":13602978,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13602983,"byte_end":13603063,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603068,"byte_end":13603134,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603139,"byte_end":13603142,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603147,"byte_end":13603161,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603166,"byte_end":13603169,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603174,"byte_end":13603181,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603186,"byte_end":13603250,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603255,"byte_end":13603299,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603304,"byte_end":13603307,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603312,"byte_end":13603342,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603347,"byte_end":13603350,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603355,"byte_end":13603385,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603390,"byte_end":13603427,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603432,"byte_end":13603511,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603516,"byte_end":13603597,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13603602,"byte_end":13603609,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606671,"byte_end":13606692,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604299,"byte_end":13604395,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604400,"byte_end":13604494,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604499,"byte_end":13604570,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604575,"byte_end":13604578,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604583,"byte_end":13604678,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604683,"byte_end":13604778,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604783,"byte_end":13604873,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604878,"byte_end":13604962,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604967,"byte_end":13604970,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13604975,"byte_end":13605044,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605049,"byte_end":13605130,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605135,"byte_end":13605226,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605231,"byte_end":13605321,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605326,"byte_end":13605408,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605413,"byte_end":13605491,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605496,"byte_end":13605576,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605581,"byte_end":13605647,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605652,"byte_end":13605655,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605660,"byte_end":13605710,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605715,"byte_end":13605718,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605723,"byte_end":13605737,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605742,"byte_end":13605745,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605750,"byte_end":13605757,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605762,"byte_end":13605826,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605831,"byte_end":13605875,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605880,"byte_end":13605883,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605888,"byte_end":13605918,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605923,"byte_end":13605953,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605958,"byte_end":13605961,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13605966,"byte_end":13606001,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606006,"byte_end":13606046,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606051,"byte_end":13606061,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606066,"byte_end":13606138,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606143,"byte_end":13606165,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606170,"byte_end":13606194,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606199,"byte_end":13606221,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606226,"byte_end":13606239,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606244,"byte_end":13606269,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606274,"byte_end":13606308,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606313,"byte_end":13606343,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606348,"byte_end":13606361,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606366,"byte_end":13606375,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606380,"byte_end":13606385,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606390,"byte_end":13606393,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606398,"byte_end":13606439,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606444,"byte_end":13606454,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606459,"byte_end":13606543,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606548,"byte_end":13606575,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606580,"byte_end":13606623,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606628,"byte_end":13606637,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606642,"byte_end":13606647,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13606652,"byte_end":13606659,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609189,"byte_end":13609201,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607359,"byte_end":13607443,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607448,"byte_end":13607542,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607547,"byte_end":13607550,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607555,"byte_end":13607649,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607654,"byte_end":13607748,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607753,"byte_end":13607810,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607815,"byte_end":13607818,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607823,"byte_end":13607897,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607902,"byte_end":13607979,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13607984,"byte_end":13608054,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608059,"byte_end":13608135,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608140,"byte_end":13608199,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608204,"byte_end":13608207,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608212,"byte_end":13608282,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608287,"byte_end":13608362,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608367,"byte_end":13608439,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608444,"byte_end":13608519,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608524,"byte_end":13608545,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608550,"byte_end":13608553,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608558,"byte_end":13608592,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608597,"byte_end":13608631,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608636,"byte_end":13608670,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608675,"byte_end":13608707,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608712,"byte_end":13608715,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608720,"byte_end":13608734,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608739,"byte_end":13608742,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608747,"byte_end":13608754,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608759,"byte_end":13608808,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608813,"byte_end":13608857,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608862,"byte_end":13608865,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608870,"byte_end":13608900,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608905,"byte_end":13608935,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608940,"byte_end":13608943,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13608948,"byte_end":13609026,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609031,"byte_end":13609057,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609062,"byte_end":13609065,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609070,"byte_end":13609133,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609138,"byte_end":13609165,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609170,"byte_end":13609177,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611501,"byte_end":13611516,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609799,"byte_end":13609895,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609900,"byte_end":13609994,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13609999,"byte_end":13610070,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610075,"byte_end":13610078,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610083,"byte_end":13610178,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610183,"byte_end":13610274,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610279,"byte_end":13610292,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610297,"byte_end":13610300,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610305,"byte_end":13610390,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610395,"byte_end":13610426,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610431,"byte_end":13610434,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610439,"byte_end":13610476,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610481,"byte_end":13610484,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610489,"byte_end":13610577,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610582,"byte_end":13610603,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610608,"byte_end":13610611,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610616,"byte_end":13610648,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610653,"byte_end":13610685,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610690,"byte_end":13610722,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610727,"byte_end":13610759,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610764,"byte_end":13610796,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610801,"byte_end":13610833,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610838,"byte_end":13610869,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610874,"byte_end":13610877,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610882,"byte_end":13610896,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610901,"byte_end":13610904,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610909,"byte_end":13610916,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610921,"byte_end":13610948,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13610953,"byte_end":13611017,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611022,"byte_end":13611066,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611071,"byte_end":13611074,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611079,"byte_end":13611109,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611114,"byte_end":13611117,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611122,"byte_end":13611152,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611157,"byte_end":13611194,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611199,"byte_end":13611269,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611274,"byte_end":13611346,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611351,"byte_end":13611358,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611410,"byte_end":13611430,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611435,"byte_end":13611489,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614285,"byte_end":13614305,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611859,"byte_end":13611955,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13611960,"byte_end":13612054,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612059,"byte_end":13612130,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612135,"byte_end":13612138,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612143,"byte_end":13612237,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612242,"byte_end":13612337,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612342,"byte_end":13612432,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612437,"byte_end":13612521,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612526,"byte_end":13612529,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612534,"byte_end":13612619,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612624,"byte_end":13612655,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612660,"byte_end":13612663,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612668,"byte_end":13612716,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612721,"byte_end":13612724,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612729,"byte_end":13612771,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612776,"byte_end":13612779,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612784,"byte_end":13612882,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612887,"byte_end":13612908,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612913,"byte_end":13612916,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612921,"byte_end":13612953,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612958,"byte_end":13612990,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13612995,"byte_end":13613027,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613032,"byte_end":13613064,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613069,"byte_end":13613101,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613106,"byte_end":13613138,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613143,"byte_end":13613174,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613179,"byte_end":13613182,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613187,"byte_end":13613201,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613206,"byte_end":13613209,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613214,"byte_end":13613221,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613226,"byte_end":13613253,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613258,"byte_end":13613322,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613327,"byte_end":13613371,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613376,"byte_end":13613379,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613384,"byte_end":13613414,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613419,"byte_end":13613449,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613454,"byte_end":13613457,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613462,"byte_end":13613497,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613502,"byte_end":13613542,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613547,"byte_end":13613557,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613562,"byte_end":13613625,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613630,"byte_end":13613652,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613657,"byte_end":13613681,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613686,"byte_end":13613708,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613713,"byte_end":13613726,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613731,"byte_end":13613756,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613761,"byte_end":13613795,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613800,"byte_end":13613830,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613835,"byte_end":13613848,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613853,"byte_end":13613862,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613867,"byte_end":13613872,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613877,"byte_end":13613880,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613885,"byte_end":13613926,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613931,"byte_end":13613941,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13613946,"byte_end":13614021,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614026,"byte_end":13614053,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614058,"byte_end":13614101,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614106,"byte_end":13614115,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614120,"byte_end":13614125,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614130,"byte_end":13614137,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614189,"byte_end":13614209,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614214,"byte_end":13614273,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615384,"byte_end":13615393,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614653,"byte_end":13614692,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614697,"byte_end":13614700,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614705,"byte_end":13614799,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614804,"byte_end":13614860,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614865,"byte_end":13614868,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614873,"byte_end":13614963,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614968,"byte_end":13614982,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614987,"byte_end":13614990,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13614995,"byte_end":13615009,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615014,"byte_end":13615017,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615022,"byte_end":13615029,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615034,"byte_end":13615091,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615096,"byte_end":13615140,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615145,"byte_end":13615148,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615153,"byte_end":13615213,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615218,"byte_end":13615248,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615253,"byte_end":13615308,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615313,"byte_end":13615360,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615365,"byte_end":13615372,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616292,"byte_end":13616300,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615564,"byte_end":13615602,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615607,"byte_end":13615610,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615615,"byte_end":13615708,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615713,"byte_end":13615769,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615774,"byte_end":13615777,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615782,"byte_end":13615872,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615877,"byte_end":13615891,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615896,"byte_end":13615899,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615904,"byte_end":13615918,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615923,"byte_end":13615926,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615931,"byte_end":13615938,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13615943,"byte_end":13616000,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616005,"byte_end":13616049,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616054,"byte_end":13616057,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616062,"byte_end":13616122,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616127,"byte_end":13616157,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616162,"byte_end":13616216,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616221,"byte_end":13616268,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616273,"byte_end":13616280,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617200,"byte_end":13617209,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616469,"byte_end":13616508,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616513,"byte_end":13616516,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616521,"byte_end":13616615,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616620,"byte_end":13616676,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616681,"byte_end":13616684,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616689,"byte_end":13616779,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616784,"byte_end":13616798,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616803,"byte_end":13616806,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616811,"byte_end":13616825,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616830,"byte_end":13616833,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616838,"byte_end":13616845,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616850,"byte_end":13616907,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616912,"byte_end":13616956,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616961,"byte_end":13616964,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13616969,"byte_end":13617029,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617034,"byte_end":13617064,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617069,"byte_end":13617124,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617129,"byte_end":13617176,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617181,"byte_end":13617188,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618506,"byte_end":13618516,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617379,"byte_end":13617414,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617419,"byte_end":13617422,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617427,"byte_end":13617516,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617521,"byte_end":13617607,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617612,"byte_end":13617647,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617652,"byte_end":13617655,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617660,"byte_end":13617672,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617677,"byte_end":13617680,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617685,"byte_end":13617744,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617749,"byte_end":13617752,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617757,"byte_end":13617769,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617774,"byte_end":13617777,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617782,"byte_end":13617869,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617874,"byte_end":13617907,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617912,"byte_end":13617915,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617920,"byte_end":13617934,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617939,"byte_end":13617942,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617947,"byte_end":13617958,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617963,"byte_end":13617982,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13617987,"byte_end":13618021,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618026,"byte_end":13618052,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618057,"byte_end":13618084,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618089,"byte_end":13618094,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618099,"byte_end":13618102,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618107,"byte_end":13618140,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618145,"byte_end":13618173,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618178,"byte_end":13618272,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618277,"byte_end":13618324,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618329,"byte_end":13618349,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618354,"byte_end":13618433,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618438,"byte_end":13618451,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618456,"byte_end":13618465,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618470,"byte_end":13618475,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13618480,"byte_end":13618487,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621533,"byte_end":13621540,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621470,"byte_end":13621522,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621632,"byte_end":13621642,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621570,"byte_end":13621624,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621949,"byte_end":13621959,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621664,"byte_end":13621728,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621733,"byte_end":13621736,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621741,"byte_end":13621753,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621758,"byte_end":13621761,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621766,"byte_end":13621861,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621866,"byte_end":13621934,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622225,"byte_end":13622230,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621985,"byte_end":13622020,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622021,"byte_end":13622024,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622025,"byte_end":13622067,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622068,"byte_end":13622071,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622072,"byte_end":13622170,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622171,"byte_end":13622213,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623628,"byte_end":13623636,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622880,"byte_end":13622930,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622935,"byte_end":13622938,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622943,"byte_end":13623035,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623040,"byte_end":13623133,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623138,"byte_end":13623163,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623168,"byte_end":13623171,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623176,"byte_end":13623188,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623193,"byte_end":13623196,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623201,"byte_end":13623245,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623250,"byte_end":13623253,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623258,"byte_end":13623270,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623275,"byte_end":13623278,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623283,"byte_end":13623379,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623384,"byte_end":13623431,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623436,"byte_end":13623439,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623444,"byte_end":13623458,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623463,"byte_end":13623466,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623471,"byte_end":13623478,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623483,"byte_end":13623514,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623519,"byte_end":13623522,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623527,"byte_end":13623597,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623602,"byte_end":13623609,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624034,"byte_end":13624042,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623771,"byte_end":13623815,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623820,"byte_end":13623823,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623828,"byte_end":13623842,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623847,"byte_end":13623850,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623855,"byte_end":13623862,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623867,"byte_end":13623898,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623903,"byte_end":13623906,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623911,"byte_end":13623940,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623945,"byte_end":13623980,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13623985,"byte_end":13624010,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624015,"byte_end":13624022,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624431,"byte_end":13624434,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624201,"byte_end":13624282,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624287,"byte_end":13624290,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624295,"byte_end":13624309,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624314,"byte_end":13624317,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624322,"byte_end":13624329,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624334,"byte_end":13624365,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624370,"byte_end":13624373,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624378,"byte_end":13624407,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624412,"byte_end":13624419,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624773,"byte_end":13624777,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624535,"byte_end":13624616,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624621,"byte_end":13624624,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624629,"byte_end":13624643,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624648,"byte_end":13624651,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624656,"byte_end":13624663,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624668,"byte_end":13624699,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624704,"byte_end":13624707,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624712,"byte_end":13624749,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624754,"byte_end":13624761,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625198,"byte_end":13625209,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624869,"byte_end":13624918,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624923,"byte_end":13624926,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624931,"byte_end":13624945,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624950,"byte_end":13624953,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624958,"byte_end":13624965,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624970,"byte_end":13625018,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625023,"byte_end":13625026,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625031,"byte_end":13625060,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625065,"byte_end":13625095,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625100,"byte_end":13625133,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625138,"byte_end":13625145,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625150,"byte_end":13625186,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625529,"byte_end":13625532,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625321,"byte_end":13625367,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625372,"byte_end":13625375,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625380,"byte_end":13625394,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625399,"byte_end":13625402,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625407,"byte_end":13625414,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625419,"byte_end":13625450,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625455,"byte_end":13625458,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625463,"byte_end":13625505,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625510,"byte_end":13625517,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626005,"byte_end":13626013,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625628,"byte_end":13625718,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625723,"byte_end":13625761,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625766,"byte_end":13625769,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625774,"byte_end":13625788,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625793,"byte_end":13625796,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625801,"byte_end":13625808,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625813,"byte_end":13625844,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625849,"byte_end":13625852,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625857,"byte_end":13625886,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625891,"byte_end":13625918,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625923,"byte_end":13625949,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625954,"byte_end":13625981,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13625986,"byte_end":13625993,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628475,"byte_end":13628481,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628196,"byte_end":13628249,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628250,"byte_end":13628253,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628254,"byte_end":13628317,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628318,"byte_end":13628321,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628322,"byte_end":13628420,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628421,"byte_end":13628463,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629603,"byte_end":13629609,"line_start":1287,"line_end":1287,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629133,"byte_end":13629193,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629198,"byte_end":13629201,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629206,"byte_end":13629220,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629225,"byte_end":13629228,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629233,"byte_end":13629240,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629245,"byte_end":13629301,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629306,"byte_end":13629350,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629355,"byte_end":13629358,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629363,"byte_end":13629392,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629397,"byte_end":13629427,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629432,"byte_end":13629460,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629465,"byte_end":13629468,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629473,"byte_end":13629503,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629508,"byte_end":13629542,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629547,"byte_end":13629579,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629584,"byte_end":13629591,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629986,"byte_end":13629990,"line_start":1304,"line_end":1304,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629770,"byte_end":13629801,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629806,"byte_end":13629809,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629814,"byte_end":13629828,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629833,"byte_end":13629836,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629841,"byte_end":13629848,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629853,"byte_end":13629885,"line_start":1299,"line_end":1299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629890,"byte_end":13629893,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629898,"byte_end":13629932,"line_start":1301,"line_end":1301,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629937,"byte_end":13629962,"line_start":1302,"line_end":1302,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629967,"byte_end":13629974,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630547,"byte_end":13630554,"line_start":1325,"line_end":1325,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630105,"byte_end":13630147,"line_start":1311,"line_end":1311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630152,"byte_end":13630155,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630160,"byte_end":13630174,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630179,"byte_end":13630182,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630187,"byte_end":13630194,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630199,"byte_end":13630255,"line_start":1316,"line_end":1316,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630260,"byte_end":13630304,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630309,"byte_end":13630312,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630317,"byte_end":13630344,"line_start":1319,"line_end":1319,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630349,"byte_end":13630379,"line_start":1320,"line_end":1320,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630384,"byte_end":13630429,"line_start":1321,"line_end":1321,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630434,"byte_end":13630472,"line_start":1322,"line_end":1322,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630477,"byte_end":13630523,"line_start":1323,"line_end":1323,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630528,"byte_end":13630535,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631834,"byte_end":13631839,"line_start":1361,"line_end":1361,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630654,"byte_end":13630683,"line_start":1330,"line_end":1330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630688,"byte_end":13630691,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630696,"byte_end":13630774,"line_start":1332,"line_end":1332,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630779,"byte_end":13630782,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630787,"byte_end":13630799,"line_start":1334,"line_end":1334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630804,"byte_end":13630807,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630812,"byte_end":13630897,"line_start":1336,"line_end":1336,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630902,"byte_end":13630905,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13630910,"byte_end":13631001,"line_start":1338,"line_end":1338,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631006,"byte_end":13631055,"line_start":1339,"line_end":1339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631060,"byte_end":13631063,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631068,"byte_end":13631140,"line_start":1341,"line_end":1341,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631145,"byte_end":13631220,"line_start":1342,"line_end":1342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631225,"byte_end":13631228,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631233,"byte_end":13631326,"line_start":1344,"line_end":1344,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631331,"byte_end":13631424,"line_start":1345,"line_end":1345,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631429,"byte_end":13631467,"line_start":1346,"line_end":1346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631472,"byte_end":13631475,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631480,"byte_end":13631494,"line_start":1348,"line_end":1348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631499,"byte_end":13631502,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631507,"byte_end":13631514,"line_start":1350,"line_end":1350,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631519,"byte_end":13631568,"line_start":1351,"line_end":1351,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631573,"byte_end":13631617,"line_start":1352,"line_end":1352,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631622,"byte_end":13631625,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631630,"byte_end":13631660,"line_start":1354,"line_end":1354,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631665,"byte_end":13631695,"line_start":1355,"line_end":1355,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631700,"byte_end":13631734,"line_start":1356,"line_end":1356,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631739,"byte_end":13631751,"line_start":1357,"line_end":1357,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631756,"byte_end":13631793,"line_start":1358,"line_end":1358,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631798,"byte_end":13631803,"line_start":1359,"line_end":1359,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631808,"byte_end":13631815,"line_start":1360,"line_end":1360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633105,"byte_end":13633114,"line_start":1402,"line_end":1402,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631945,"byte_end":13631974,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631979,"byte_end":13631982,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13631987,"byte_end":13632073,"line_start":1368,"line_end":1368,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632078,"byte_end":13632081,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632086,"byte_end":13632098,"line_start":1370,"line_end":1370,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632103,"byte_end":13632106,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632111,"byte_end":13632206,"line_start":1372,"line_end":1372,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632211,"byte_end":13632248,"line_start":1373,"line_end":1373,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632253,"byte_end":13632256,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632261,"byte_end":13632350,"line_start":1375,"line_end":1375,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632355,"byte_end":13632358,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632363,"byte_end":13632437,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632442,"byte_end":13632445,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632450,"byte_end":13632464,"line_start":1379,"line_end":1379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632469,"byte_end":13632472,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632477,"byte_end":13632484,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632489,"byte_end":13632538,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632543,"byte_end":13632587,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632592,"byte_end":13632595,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632600,"byte_end":13632642,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632647,"byte_end":13632677,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632682,"byte_end":13632685,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632690,"byte_end":13632728,"line_start":1388,"line_end":1388,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632733,"byte_end":13632745,"line_start":1389,"line_end":1389,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632750,"byte_end":13632780,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632785,"byte_end":13632815,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632820,"byte_end":13632861,"line_start":1392,"line_end":1392,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632866,"byte_end":13632884,"line_start":1393,"line_end":1393,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632889,"byte_end":13632933,"line_start":1394,"line_end":1394,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632938,"byte_end":13632943,"line_start":1395,"line_end":1395,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632948,"byte_end":13632951,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632956,"byte_end":13632990,"line_start":1397,"line_end":1397,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13632995,"byte_end":13633007,"line_start":1398,"line_end":1398,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633012,"byte_end":13633064,"line_start":1399,"line_end":1399,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633069,"byte_end":13633074,"line_start":1400,"line_end":1400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633079,"byte_end":13633086,"line_start":1401,"line_end":1401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634447,"byte_end":13634453,"line_start":1438,"line_end":1438,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633232,"byte_end":13633272,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633277,"byte_end":13633280,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633285,"byte_end":13633380,"line_start":1409,"line_end":1409,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633385,"byte_end":13633388,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633393,"byte_end":13633405,"line_start":1411,"line_end":1411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633410,"byte_end":13633413,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633418,"byte_end":13633503,"line_start":1413,"line_end":1413,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633508,"byte_end":13633511,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633516,"byte_end":13633607,"line_start":1415,"line_end":1415,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633612,"byte_end":13633661,"line_start":1416,"line_end":1416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633666,"byte_end":13633669,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633674,"byte_end":13633746,"line_start":1418,"line_end":1418,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633751,"byte_end":13633826,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633831,"byte_end":13633834,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633839,"byte_end":13633932,"line_start":1421,"line_end":1421,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13633937,"byte_end":13634030,"line_start":1422,"line_end":1422,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634035,"byte_end":13634073,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634078,"byte_end":13634081,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634086,"byte_end":13634100,"line_start":1425,"line_end":1425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634105,"byte_end":13634108,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634113,"byte_end":13634120,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634125,"byte_end":13634174,"line_start":1428,"line_end":1428,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634179,"byte_end":13634223,"line_start":1429,"line_end":1429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634228,"byte_end":13634231,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634236,"byte_end":13634266,"line_start":1431,"line_end":1431,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634271,"byte_end":13634301,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634306,"byte_end":13634340,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634345,"byte_end":13634357,"line_start":1434,"line_end":1434,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634362,"byte_end":13634406,"line_start":1435,"line_end":1435,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634411,"byte_end":13634416,"line_start":1436,"line_end":1436,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634421,"byte_end":13634428,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635313,"byte_end":13635323,"line_start":1471,"line_end":1471,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634643,"byte_end":13634678,"line_start":1447,"line_end":1447,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634683,"byte_end":13634686,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634691,"byte_end":13634703,"line_start":1449,"line_end":1449,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634708,"byte_end":13634711,"line_start":1450,"line_end":1450,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634716,"byte_end":13634775,"line_start":1451,"line_end":1451,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634780,"byte_end":13634783,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634788,"byte_end":13634800,"line_start":1453,"line_end":1453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634805,"byte_end":13634808,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634813,"byte_end":13634900,"line_start":1455,"line_end":1455,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634905,"byte_end":13634938,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634943,"byte_end":13634946,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634951,"byte_end":13634965,"line_start":1458,"line_end":1458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634970,"byte_end":13634973,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634978,"byte_end":13634985,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13634990,"byte_end":13635039,"line_start":1461,"line_end":1461,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635044,"byte_end":13635088,"line_start":1462,"line_end":1462,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635093,"byte_end":13635096,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635101,"byte_end":13635131,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635136,"byte_end":13635148,"line_start":1465,"line_end":1465,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635153,"byte_end":13635195,"line_start":1466,"line_end":1466,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635200,"byte_end":13635238,"line_start":1467,"line_end":1467,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635243,"byte_end":13635272,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635277,"byte_end":13635282,"line_start":1469,"line_end":1469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635287,"byte_end":13635294,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635883,"byte_end":13635886,"line_start":1489,"line_end":1489,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635475,"byte_end":13635521,"line_start":1476,"line_end":1476,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635526,"byte_end":13635529,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635534,"byte_end":13635548,"line_start":1478,"line_end":1478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635553,"byte_end":13635556,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635561,"byte_end":13635568,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635573,"byte_end":13635629,"line_start":1481,"line_end":1481,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635634,"byte_end":13635678,"line_start":1482,"line_end":1482,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635683,"byte_end":13635686,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635691,"byte_end":13635753,"line_start":1484,"line_end":1484,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635758,"byte_end":13635788,"line_start":1485,"line_end":1485,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635793,"byte_end":13635827,"line_start":1486,"line_end":1486,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635832,"byte_end":13635859,"line_start":1487,"line_end":1487,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635864,"byte_end":13635871,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636560,"byte_end":13636568,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13635982,"byte_end":13636072,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636077,"byte_end":13636115,"line_start":1495,"line_end":1495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636120,"byte_end":13636123,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636128,"byte_end":13636142,"line_start":1497,"line_end":1497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636147,"byte_end":13636150,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636155,"byte_end":13636162,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636167,"byte_end":13636216,"line_start":1500,"line_end":1500,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636221,"byte_end":13636265,"line_start":1501,"line_end":1501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636270,"byte_end":13636273,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636278,"byte_end":13636308,"line_start":1503,"line_end":1503,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636313,"byte_end":13636343,"line_start":1504,"line_end":1504,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636348,"byte_end":13636383,"line_start":1505,"line_end":1505,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636388,"byte_end":13636416,"line_start":1506,"line_end":1506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636421,"byte_end":13636424,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636429,"byte_end":13636457,"line_start":1508,"line_end":1508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636462,"byte_end":13636490,"line_start":1509,"line_end":1509,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636495,"byte_end":13636536,"line_start":1510,"line_end":1510,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636541,"byte_end":13636548,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639497,"byte_end":13639506,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639448,"byte_end":13639485,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639813,"byte_end":13639816,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639773,"byte_end":13639801,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639921,"byte_end":13639929,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639864,"byte_end":13639909,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640597,"byte_end":13640608,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640549,"byte_end":13640585,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640719,"byte_end":13640722,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640673,"byte_end":13640693,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640698,"byte_end":13640707,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640860,"byte_end":13640869,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640791,"byte_end":13640834,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640839,"byte_end":13640848,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641025,"byte_end":13641034,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640943,"byte_end":13640999,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641004,"byte_end":13641013,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661686,"byte_end":13661691,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":479}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13659970,"byte_end":13660019,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660020,"byte_end":13660023,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660024,"byte_end":13660037,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660038,"byte_end":13660041,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660042,"byte_end":13660121,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660122,"byte_end":13660125,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660126,"byte_end":13660133,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660134,"byte_end":13660167,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660168,"byte_end":13660171,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660172,"byte_end":13660270,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660271,"byte_end":13660363,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660364,"byte_end":13660394,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660395,"byte_end":13660402,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660403,"byte_end":13660406,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660407,"byte_end":13660483,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660484,"byte_end":13660487,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660488,"byte_end":13660515,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660516,"byte_end":13660519,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660520,"byte_end":13660607,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660608,"byte_end":13660624,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660625,"byte_end":13660628,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660629,"byte_end":13660636,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660637,"byte_end":13660686,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660687,"byte_end":13660731,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660732,"byte_end":13660735,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660736,"byte_end":13660774,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660775,"byte_end":13660804,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660805,"byte_end":13660808,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660809,"byte_end":13660839,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660840,"byte_end":13660870,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660871,"byte_end":13660874,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660875,"byte_end":13660949,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660950,"byte_end":13660984,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660985,"byte_end":13660988,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13660989,"byte_end":13661040,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661041,"byte_end":13661087,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661088,"byte_end":13661131,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661132,"byte_end":13661137,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661138,"byte_end":13661145,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661146,"byte_end":13661149,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661150,"byte_end":13661171,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661172,"byte_end":13661175,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661176,"byte_end":13661271,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661272,"byte_end":13661370,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661371,"byte_end":13661390,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661391,"byte_end":13661394,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661395,"byte_end":13661402,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661403,"byte_end":13661436,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661437,"byte_end":13661440,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661441,"byte_end":13661471,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661472,"byte_end":13661502,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661503,"byte_end":13661535,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661536,"byte_end":13661553,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661554,"byte_end":13661586,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661587,"byte_end":13661604,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661605,"byte_end":13661638,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661639,"byte_end":13661646,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661647,"byte_end":13661650,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661651,"byte_end":13661674,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662666,"byte_end":13662671,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661750,"byte_end":13661839,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661844,"byte_end":13661869,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661874,"byte_end":13661877,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661882,"byte_end":13661975,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661980,"byte_end":13662068,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662073,"byte_end":13662163,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662168,"byte_end":13662208,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662213,"byte_end":13662216,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662221,"byte_end":13662311,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662316,"byte_end":13662407,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662412,"byte_end":13662499,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662504,"byte_end":13662524,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662529,"byte_end":13662532,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662537,"byte_end":13662624,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662629,"byte_end":13662654,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666971,"byte_end":13666986,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662835,"byte_end":13662924,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662929,"byte_end":13662954,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662959,"byte_end":13662962,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13662967,"byte_end":13663060,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663065,"byte_end":13663153,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663158,"byte_end":13663248,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663253,"byte_end":13663293,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663298,"byte_end":13663301,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663306,"byte_end":13663396,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663401,"byte_end":13663492,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663497,"byte_end":13663584,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663589,"byte_end":13663609,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663614,"byte_end":13663617,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663622,"byte_end":13663709,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663714,"byte_end":13663739,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663744,"byte_end":13663747,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663752,"byte_end":13663764,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663769,"byte_end":13663772,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663777,"byte_end":13663869,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663874,"byte_end":13663961,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663966,"byte_end":13663978,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663983,"byte_end":13663986,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13663991,"byte_end":13663998,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664003,"byte_end":13664036,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664041,"byte_end":13664044,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664049,"byte_end":13664079,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664084,"byte_end":13664111,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664116,"byte_end":13664128,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664133,"byte_end":13664208,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664213,"byte_end":13664252,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664257,"byte_end":13664293,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664298,"byte_end":13664309,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664314,"byte_end":13664319,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664324,"byte_end":13664331,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664336,"byte_end":13664339,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664344,"byte_end":13664438,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664443,"byte_end":13664474,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664479,"byte_end":13664482,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664487,"byte_end":13664582,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664587,"byte_end":13664679,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664684,"byte_end":13664773,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664778,"byte_end":13664781,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664786,"byte_end":13664799,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664804,"byte_end":13664857,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664862,"byte_end":13664944,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664949,"byte_end":13664956,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664961,"byte_end":13664964,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13664969,"byte_end":13665062,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665067,"byte_end":13665162,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665167,"byte_end":13665227,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665232,"byte_end":13665235,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665240,"byte_end":13665254,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665259,"byte_end":13665262,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665267,"byte_end":13665353,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665358,"byte_end":13665452,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665457,"byte_end":13665553,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665558,"byte_end":13665650,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665655,"byte_end":13665711,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665716,"byte_end":13665719,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665724,"byte_end":13665731,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665736,"byte_end":13665792,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665797,"byte_end":13665841,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665846,"byte_end":13665849,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665854,"byte_end":13665885,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665890,"byte_end":13665893,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665898,"byte_end":13665975,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13665980,"byte_end":13666011,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666016,"byte_end":13666019,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666024,"byte_end":13666054,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666059,"byte_end":13666089,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666094,"byte_end":13666097,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666102,"byte_end":13666179,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666184,"byte_end":13666256,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666261,"byte_end":13666264,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666269,"byte_end":13666290,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666295,"byte_end":13666355,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666360,"byte_end":13666442,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666447,"byte_end":13666463,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666468,"byte_end":13666547,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666552,"byte_end":13666595,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666600,"byte_end":13666668,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666673,"byte_end":13666765,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666770,"byte_end":13666854,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666859,"byte_end":13666896,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666901,"byte_end":13666916,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666921,"byte_end":13666930,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666935,"byte_end":13666940,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13666945,"byte_end":13666952,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670573,"byte_end":13670586,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667225,"byte_end":13667318,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667323,"byte_end":13667375,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667380,"byte_end":13667383,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667388,"byte_end":13667481,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667486,"byte_end":13667576,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667581,"byte_end":13667670,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667675,"byte_end":13667729,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667734,"byte_end":13667737,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667742,"byte_end":13667835,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667840,"byte_end":13667933,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13667938,"byte_end":13668031,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668036,"byte_end":13668067,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668072,"byte_end":13668075,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668080,"byte_end":13668169,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668174,"byte_end":13668199,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668204,"byte_end":13668207,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668212,"byte_end":13668224,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668229,"byte_end":13668232,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668237,"byte_end":13668330,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668335,"byte_end":13668368,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668373,"byte_end":13668376,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668381,"byte_end":13668476,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668481,"byte_end":13668519,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668524,"byte_end":13668527,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668532,"byte_end":13668627,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668632,"byte_end":13668724,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668729,"byte_end":13668818,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668823,"byte_end":13668826,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668831,"byte_end":13668844,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668849,"byte_end":13668902,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668907,"byte_end":13668966,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668971,"byte_end":13668978,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668983,"byte_end":13668986,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13668991,"byte_end":13669085,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669090,"byte_end":13669177,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669182,"byte_end":13669242,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669247,"byte_end":13669250,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669255,"byte_end":13669269,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669274,"byte_end":13669277,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669282,"byte_end":13669368,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669373,"byte_end":13669467,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669472,"byte_end":13669568,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669573,"byte_end":13669665,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669670,"byte_end":13669726,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669731,"byte_end":13669734,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669739,"byte_end":13669746,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669751,"byte_end":13669807,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669812,"byte_end":13669856,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669861,"byte_end":13669864,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669869,"byte_end":13669900,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669905,"byte_end":13669908,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669913,"byte_end":13669990,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13669995,"byte_end":13670026,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670031,"byte_end":13670034,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670039,"byte_end":13670069,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670074,"byte_end":13670104,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670109,"byte_end":13670112,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670117,"byte_end":13670194,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670199,"byte_end":13670271,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670276,"byte_end":13670279,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670284,"byte_end":13670305,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670310,"byte_end":13670370,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670375,"byte_end":13670457,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670462,"byte_end":13670478,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670483,"byte_end":13670518,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670523,"byte_end":13670532,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670537,"byte_end":13670542,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670547,"byte_end":13670554,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671471,"byte_end":13671476,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670686,"byte_end":13670781,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670786,"byte_end":13670803,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670808,"byte_end":13670811,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670816,"byte_end":13670910,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13670915,"byte_end":13671007,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671012,"byte_end":13671080,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671085,"byte_end":13671088,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671093,"byte_end":13671185,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671190,"byte_end":13671193,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671198,"byte_end":13671212,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671217,"byte_end":13671220,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671225,"byte_end":13671232,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671237,"byte_end":13671270,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671275,"byte_end":13671278,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671283,"byte_end":13671313,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671318,"byte_end":13671343,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671348,"byte_end":13671412,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671417,"byte_end":13671424,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671429,"byte_end":13671447,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671452,"byte_end":13671459,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672638,"byte_end":13672643,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671600,"byte_end":13671651,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671656,"byte_end":13671659,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671664,"byte_end":13671754,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671759,"byte_end":13671853,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671858,"byte_end":13671952,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13671957,"byte_end":13672009,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672014,"byte_end":13672017,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672022,"byte_end":13672115,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672120,"byte_end":13672123,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672128,"byte_end":13672142,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672147,"byte_end":13672150,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672155,"byte_end":13672162,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672167,"byte_end":13672216,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672221,"byte_end":13672265,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672270,"byte_end":13672273,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672278,"byte_end":13672307,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672312,"byte_end":13672345,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672350,"byte_end":13672355,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672360,"byte_end":13672399,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672404,"byte_end":13672458,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672463,"byte_end":13672468,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672473,"byte_end":13672491,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672496,"byte_end":13672501,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672506,"byte_end":13672545,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672550,"byte_end":13672604,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672609,"byte_end":13672614,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672619,"byte_end":13672626,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673970,"byte_end":13673981,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672767,"byte_end":13672858,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672863,"byte_end":13672866,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672871,"byte_end":13672962,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13672967,"byte_end":13673063,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673068,"byte_end":13673162,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673167,"byte_end":13673186,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673191,"byte_end":13673194,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673199,"byte_end":13673293,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673298,"byte_end":13673340,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673345,"byte_end":13673348,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673353,"byte_end":13673367,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673372,"byte_end":13673375,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673380,"byte_end":13673387,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673392,"byte_end":13673441,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673446,"byte_end":13673490,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673495,"byte_end":13673515,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673520,"byte_end":13673548,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673553,"byte_end":13673556,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673561,"byte_end":13673590,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673595,"byte_end":13673628,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673633,"byte_end":13673638,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673643,"byte_end":13673682,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673687,"byte_end":13673741,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673746,"byte_end":13673751,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673756,"byte_end":13673823,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673828,"byte_end":13673833,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673838,"byte_end":13673877,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673882,"byte_end":13673936,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673941,"byte_end":13673946,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13673951,"byte_end":13673958,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675127,"byte_end":13675136,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674586,"byte_end":13674641,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674646,"byte_end":13674649,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674654,"byte_end":13674729,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674734,"byte_end":13674784,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674789,"byte_end":13674792,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674797,"byte_end":13674881,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674886,"byte_end":13674889,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674894,"byte_end":13674908,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674913,"byte_end":13674916,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674921,"byte_end":13674928,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674933,"byte_end":13674966,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674971,"byte_end":13674974,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13674979,"byte_end":13675009,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675014,"byte_end":13675044,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675049,"byte_end":13675103,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675108,"byte_end":13675115,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678435,"byte_end":13678446,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675546,"byte_end":13675633,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675634,"byte_end":13675637,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675638,"byte_end":13675733,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675734,"byte_end":13675823,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675824,"byte_end":13675827,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675828,"byte_end":13675921,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675922,"byte_end":13675959,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675960,"byte_end":13675963,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675964,"byte_end":13676060,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676061,"byte_end":13676064,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676065,"byte_end":13676077,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676078,"byte_end":13676081,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676082,"byte_end":13676172,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676173,"byte_end":13676240,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676241,"byte_end":13676244,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676245,"byte_end":13676259,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676260,"byte_end":13676263,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676264,"byte_end":13676271,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676272,"byte_end":13676321,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676322,"byte_end":13676367,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676368,"byte_end":13676371,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676372,"byte_end":13676399,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676400,"byte_end":13676403,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676404,"byte_end":13676416,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676417,"byte_end":13676472,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676473,"byte_end":13676519,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676520,"byte_end":13676523,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676524,"byte_end":13676598,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676599,"byte_end":13676649,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676650,"byte_end":13676653,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676654,"byte_end":13676683,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676684,"byte_end":13676740,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676741,"byte_end":13676752,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676753,"byte_end":13676756,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676757,"byte_end":13676838,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676839,"byte_end":13676844,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676845,"byte_end":13676852,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676853,"byte_end":13676856,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676857,"byte_end":13676951,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676952,"byte_end":13676955,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13676956,"byte_end":13677050,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677051,"byte_end":13677136,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677137,"byte_end":13677140,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677141,"byte_end":13677240,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677241,"byte_end":13677339,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677340,"byte_end":13677360,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677361,"byte_end":13677364,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677365,"byte_end":13677372,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677373,"byte_end":13677422,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677423,"byte_end":13677454,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677455,"byte_end":13677500,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677501,"byte_end":13677504,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677505,"byte_end":13677526,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677527,"byte_end":13677557,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677558,"byte_end":13677563,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677564,"byte_end":13677567,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677568,"byte_end":13677588,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677589,"byte_end":13677619,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677620,"byte_end":13677650,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677651,"byte_end":13677656,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677657,"byte_end":13677660,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677661,"byte_end":13677692,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677693,"byte_end":13677721,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677722,"byte_end":13677742,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677743,"byte_end":13677779,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677780,"byte_end":13677857,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677858,"byte_end":13677861,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677862,"byte_end":13677913,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677914,"byte_end":13677954,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13677955,"byte_end":13678029,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678030,"byte_end":13678033,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678034,"byte_end":13678122,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678123,"byte_end":13678173,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678174,"byte_end":13678226,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678227,"byte_end":13678255,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678256,"byte_end":13678259,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678260,"byte_end":13678292,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678293,"byte_end":13678310,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678311,"byte_end":13678324,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678325,"byte_end":13678334,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678335,"byte_end":13678340,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678341,"byte_end":13678348,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678349,"byte_end":13678352,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678353,"byte_end":13678382,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678383,"byte_end":13678410,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678411,"byte_end":13678420,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734438,"byte_end":13734441,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734392,"byte_end":13734420,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734421,"byte_end":13734430,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734566,"byte_end":13734575,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734497,"byte_end":13734548,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734549,"byte_end":13734558,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734685,"byte_end":13734702,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/default.rs","byte_start":13734636,"byte_end":13734677,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589175,"byte_end":13589195,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590622,"byte_end":13590630,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594404,"byte_end":13594405,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597624,"byte_end":13597630,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597695,"byte_end":13597701,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597717,"byte_end":13597723,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598056,"byte_end":13598062,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619025,"byte_end":13619031,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619378,"byte_end":13619384,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619672,"byte_end":13619678,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620025,"byte_end":13620031,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620143,"byte_end":13620149,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620544,"byte_end":13620550,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620653,"byte_end":13620659,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620779,"byte_end":13620785,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621134,"byte_end":13621140,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622353,"byte_end":13622358,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622865,"byte_end":13622870,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624520,"byte_end":13624525,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626195,"byte_end":13626200,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626390,"byte_end":13626395,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626673,"byte_end":13626678,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626819,"byte_end":13626824,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627017,"byte_end":13627022,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627188,"byte_end":13627193,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627283,"byte_end":13627288,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627761,"byte_end":13627766,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627876,"byte_end":13627881,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628003,"byte_end":13628008,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628114,"byte_end":13628119,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628620,"byte_end":13628626,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628800,"byte_end":13628806,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628861,"byte_end":13628867,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629113,"byte_end":13629119,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629750,"byte_end":13629756,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636713,"byte_end":13636719,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637282,"byte_end":13637288,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637415,"byte_end":13637421,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637495,"byte_end":13637501,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637666,"byte_end":13637672,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637820,"byte_end":13637826,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13638129,"byte_end":13638135,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13638326,"byte_end":13638332,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639569,"byte_end":13639578,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639603,"byte_end":13639612,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639634,"byte_end":13639643,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639757,"byte_end":13639766,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640008,"byte_end":13640017,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640215,"byte_end":13640224,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640352,"byte_end":13640361,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640535,"byte_end":13640544,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640655,"byte_end":13640666,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641126,"byte_end":13641137,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641284,"byte_end":13641295,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13652038,"byte_end":13652046,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13652170,"byte_end":13652178,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13656038,"byte_end":13656043,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13657847,"byte_end":13657858,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661738,"byte_end":13661743,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675261,"byte_end":13675266,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675436,"byte_end":13675441,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678725,"byte_end":13678737,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681810,"byte_end":13681813,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681823,"byte_end":13681826,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13682775,"byte_end":13682778,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686052,"byte_end":13686055,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686454,"byte_end":13686457,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686884,"byte_end":13686893,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686903,"byte_end":13686912,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13687594,"byte_end":13687600,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13692724,"byte_end":13692729,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13701454,"byte_end":13701459,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13707524,"byte_end":13707529,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13707665,"byte_end":13707670,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13708183,"byte_end":13708187,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13710770,"byte_end":13710774,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13711306,"byte_end":13711310,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721131,"byte_end":13721136,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721173,"byte_end":13721178,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721194,"byte_end":13721199,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13727119,"byte_end":13727124,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13589175,"byte_end":13589195,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13590622,"byte_end":13590630,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":46170},"to":{"krate":0,"index":113}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13594404,"byte_end":13594405,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":140},"to":{"krate":0,"index":130}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597624,"byte_end":13597630,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597695,"byte_end":13597701,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13597717,"byte_end":13597723,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13598056,"byte_end":13598062,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619025,"byte_end":13619031,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619378,"byte_end":13619384,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9612}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13619672,"byte_end":13619678,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620025,"byte_end":13620031,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620143,"byte_end":13620149,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620544,"byte_end":13620550,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620653,"byte_end":13620659,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13620779,"byte_end":13620785,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13621134,"byte_end":13621140,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622353,"byte_end":13622358,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":249},"to":{"krate":0,"index":245}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13622865,"byte_end":13622870,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13624520,"byte_end":13624525,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626195,"byte_end":13626200,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626390,"byte_end":13626395,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626673,"byte_end":13626678,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13626819,"byte_end":13626824,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627017,"byte_end":13627022,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627188,"byte_end":13627193,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627283,"byte_end":13627288,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627761,"byte_end":13627766,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13627876,"byte_end":13627881,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628003,"byte_end":13628008,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628114,"byte_end":13628119,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628620,"byte_end":13628626,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628800,"byte_end":13628806,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13628861,"byte_end":13628867,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":303},"to":{"krate":0,"index":245}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629113,"byte_end":13629119,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13629750,"byte_end":13629756,"line_start":1293,"line_end":1293,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13636713,"byte_end":13636719,"line_start":1517,"line_end":1517,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637282,"byte_end":13637288,"line_start":1539,"line_end":1539,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637415,"byte_end":13637421,"line_start":1545,"line_end":1545,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637495,"byte_end":13637501,"line_start":1547,"line_end":1547,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637666,"byte_end":13637672,"line_start":1553,"line_end":1553,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13637820,"byte_end":13637826,"line_start":1559,"line_end":1559,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13638129,"byte_end":13638135,"line_start":1570,"line_end":1570,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":9612}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/atomic.rs","byte_start":13638326,"byte_end":13638332,"line_start":1576,"line_end":1576,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":303},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639569,"byte_end":13639578,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639603,"byte_end":13639612,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639634,"byte_end":13639643,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13639757,"byte_end":13639766,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640008,"byte_end":13640017,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640215,"byte_end":13640224,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640352,"byte_end":13640361,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640535,"byte_end":13640544,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13640655,"byte_end":13640666,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641126,"byte_end":13641137,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/collector.rs","byte_start":13641284,"byte_end":13641295,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13652038,"byte_end":13652046,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/deferred.rs","byte_start":13652170,"byte_end":13652178,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13656038,"byte_end":13656043,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/epoch.rs","byte_start":13657847,"byte_end":13657858,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13661738,"byte_end":13661743,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675261,"byte_end":13675266,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13675436,"byte_end":13675441,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/guard.rs","byte_start":13678725,"byte_end":13678737,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681810,"byte_end":13681813,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13681823,"byte_end":13681826,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13682775,"byte_end":13682778,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686052,"byte_end":13686055,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686454,"byte_end":13686457,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686884,"byte_end":13686893,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13686903,"byte_end":13686912,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13687594,"byte_end":13687600,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13692724,"byte_end":13692729,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/internal.rs","byte_start":13701454,"byte_end":13701459,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":681}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13707524,"byte_end":13707529,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13707665,"byte_end":13707670,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13708183,"byte_end":13708187,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13710770,"byte_end":13710774,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":850},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/list.rs","byte_start":13711306,"byte_end":13711310,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721131,"byte_end":13721136,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721173,"byte_end":13721178,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13721194,"byte_end":13721199,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.7/src/sync/queue.rs","byte_start":13727119,"byte_end":13727124,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3266}}]}